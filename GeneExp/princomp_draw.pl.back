#!/usr/bin/perl -w 
use strict;
use Cwd 'abs_path';
use Getopt::Long;
use FindBin qw($Bin $Script);
use File::Basename qw(basename dirname);
use List::Util qw/max min sum/;
=head1 Version
  Author: Wang Chongzhi, wangchongzhi@genomics.org.cn / wangcz85@163.com
  data : 2013.3.28,2013.4.24, 2015 revised by others

=head1 Description
  generate R script for Principal Components Analysis to draw several figures displaying the analysis result.
  input: table of expression among samples. 

=head1 Usage
  perl princomp_draw.pl -expr <table file> [--group <group in file> --o <output file>]
        --expr <str>   table format like the following:
########################################################################
GeneID  Sample_1  Sample_X sample_comtrol
ERCC1   1	2	3
ERCC2   3	6	9
......
########################################################################
        --group <str>      group information,optional
########################################################################
GROUPNAME1  SAMPLENAME1,SAMPLENAME2
GROUPNAME2  SAMPLENAME3,SAMPLENAME4
########################################################################
        --o <str>          Out directory(default ".")
        --help             get help information and exit

=head1 Example
  eg 1: perl princomp_draw.pl --expr expression.xls
  eg 2: perl princomp_draw.pl --expr expression.xls -g groupinfo.txt -o workdir

=cut

my ($Expression_file, $Outdir, $Group_info, $Help, $Rscript);
GetOptions(
	"expr:s"=>\$Expression_file,
	"o:s"=>\$Outdir,
	"help"=>\$Help,
	"R:s"=>\$Rscript,
	"group:s" => \$Group_info
);
die `pod2text $0` if (@ARGV != 0 || !$Expression_file || $Help);
$Outdir ||= "." if (!defined $Outdir);
$Rscript = "$Bin/../software/Rscript" unless ($Rscript and -f $Rscript);

### added in 2015-09-09 ###
my $R_episode = '';
my $R_sign = '';

if ($Group_info) {
	system("sed '1s/-/_/g' $Expression_file >$Outdir/PCA.expression.$$.tmp");
	$Expression_file = "$Outdir/PCA.expression.$$.tmp";
	my %sam_check = map {/(.+)_expression/; $1 => 1} (grep /_expression/, (split/\s+/, `head -1 $Expression_file`));
	my %uni_check;
	my $R_def = '';
	my $R_map = "Groups <- c()\nfor (i in Samples) {\n";
	my $i = 0;
	my $total_num_in_group_info = 0;
	for (`cat $Group_info`) {
		chomp;
		next if $_ eq '';
		$i ++;
		my ($group_name, $samples) = split/\s+/;
		$samples =~ s/-/_/g;
		my @samples = split/,/, $samples;
		$group_name = "$group_name";# (" . ($#samples + 1) . " samples)";
		$total_num_in_group_info += $#samples + 1;
		for (@samples) { # check check check
			die "$_ appears more than once in group information file, please check.\n" if $uni_check{$_};
			$uni_check{$_} = 1;
			die "$_ does not match the sample names in expression file, please check.\n" unless $sam_check{$_};
		}
		$R_def .= "group_$i <- c('" . join("','", @samples) . "')\n";
		$R_map .= "  if (i \%in\% group_$i) Groups <- c(Groups, '$group_name')\n";
	}
	$R_map .= "}\nLegend <- Groups\n";
	$R_episode = $R_def . $R_map;
	$R_sign = "#";
#	die "The sample numbers in expression file does not match the numbers in group information file, please check.\n"
#		if $total_num_in_group_info != keys %sam_check;
}
### added in 2015-09-09 ###

#######################generate R script#####################
`sed -i 's/_expression//g' $Outdir/PCA.expression.$$.tmp`;  #licong 20170117
my $keyname = basename($Expression_file);
open RSC,"> $Outdir/$keyname.R" or die $!;
print RSC <<EOF;
expr <- read.table("$Expression_file",header = TRUE)
options(width = 160)
expr.dim <- dim(expr)
N_samp <- expr.dim[2] - 1
N_gene <- expr.dim[1]
expr.pca<- princomp(expr[,-1],cor = TRUE)
summary(expr.pca,loadings = TRUE)

#pdf(file = "$Outdir/$keyname.pca_figure.pdf", 5.5, 5.5)
#library(plotrix)
#pc.var <- expr.pca\$sdev ** 2
#whichgap <- which.max(pc.var[-N_samp] - pc.var[-1])
#gap.size <- 0.9 * (pc.var[whichgap] - pc.var[whichgap + 1])
#gaps <- c(pc.var[whichgap + 1] + 0.05 * gap.size, pc.var[whichgap] - 0.05 * gap.size)
#col <- color.gradient(c(0, 1), c(0, 1, 0), c(1, 0), N_samp)
#gap.barplot(pc.var, gap=gaps, col = col, main = "Variances of Principal Components", ylim = c(0,expr.pca\$sdev[1] ** 2 - gap.size), xlab = "Components", ylab = "Variances", xlim = c(0,N_samp + 1), ytics=as.numeric(sprintf("%.3f", c(min(pc.var),max(pc.var),pc.var[whichgap+1],pc.var[whichgap]))))
#box(lty = "solid", col = 'black')

load <- loadings(expr.pca)
pc <- data.frame(load[,1:3])
rnam <- rownames(pc)
#rnam = gsub("expression", "", rnam, ignore.case = TRUE, perl = TRUE)
#rnam = gsub("[_\\\\.]", "", rnam, ignore.case = TRUE, perl = TRUE)
rnam = gsub("_expression", "", rnam, ignore.case = TRUE, perl = TRUE)
#rnam = gsub("^X", "", rnam, ignore.case = TRUE, perl = TRUE)

#plot(pc[,-3], pch = "*", col = rainbow(N_samp), main = "loadings for PC1 and PC2 in samples")
#text(pc[,1],pc[,2], cex = 0.5, adj = c(-0.2,0.5))
#legend("topleft", pch = 20, col = rainbow(N_samp),cex = 0.5,legend = rnam)

#plot(pc[,-2], pch = "*", col = rainbow(N_samp), main = "loadings for PC1 and PC3 in samples");
#text(pc[,1],pc[,3], cex = 0.5, adj = c(-0.2,0.5))
#legend("topleft", pch = 20, col = rainbow(N_samp), cex = 0.5, legend = rnam)

#plot(pc[,-1], pch = "*", col = rainbow(N_samp), main = "loadings for PC2 and PC3 in samples");
#text(pc[,2],pc[,3], cex = 0.5, adj = c(-0.2,0.5))
#legend("topleft", pch = 20, col = rainbow(N_samp), cex = 0.5, legend = rnam)

#nouse = dev.off()

#pdf(file = "$Outdir/$keyname.scatter.pdf", 5.5, 5.5)
#biplot(expr.pca, cex = 0.5, pc.biplot = FALSE)
#title(main = "Genes Scatter Diagram")
#nouse = dev.off()

#pdf(file = "$Outdir/$keyname.3D.pdf", 7, 7)
#library(scatterplot3d)
#pc.var.scaled <- 100 * pc.var/sum(pc.var)
#pc.var.scaled = sprintf("%.2f", pc.var.scaled)
#axis.names <- paste(names(pc.var), pc.var.scaled, sep = "(")
#axis.names <- paste(axis.names, "%)", sep = "")
#s3d <- scatterplot3d(pc, type = "h", angle = 40, highlight.3d = FALSE, scale.y = 0.7, pch = 19, main = "PCA 3D figure", las = 1, color = rainbow(N_samp), xlab = axis.names[1], ylab = axis.names[2], zlab = axis.names[3])
#text(s3d\$xyz.convert(pc), labels = 1:N_samp, cex = 0.6)
#legend("topleft", pch = 20, col = rainbow(N_samp), cex = 0.6, legend = rnam)
#nouse = dev.off()

####### DATE: 2015-5-28 #######
sum = summary(expr.pca, loadings=T)
out_table = sum\$loadings[]
rownames(out_table) = rnam
write.table(out_table, "$Outdir/PCA_result.xls", sep="\t", quote=F, col.names=NA)

#add pc component
percent<- round((((sum\$sdev)^2 / sum(sum\$sdev^2))*100)[1:4],digits = 2)

library(ggplot2)
library(ggrepel)
dat = data.frame(load[,1:4]) 
Samples = rnam

Number = factor(Samples, order=T)
Number = unclass(Number)
samples = paste(Samples, '(', Number, ')', sep='')
Legend = samples

$R_episode
dat\$group <- Groups

pdf("$Outdir/PCA.Com1-Com2.pdf", 4,2.9)
ggplot()+
geom_point(data=dat, aes(x=Comp.1, y=Comp.2,color = factor(group)),size=2)+
geom_text_repel(data=dat, aes(x=Comp.1, y=Comp.2, label=rownames(dat),color = factor(group)),size=2)+
scale_colour_brewer(palette = "Set1",name = "Group")+
labs(x=paste("Comp 1  (",as.matrix(percent)[1],"%)"),y=paste("Comp 2  (",as.matrix(percent)[2],"%)"))+
theme_bw()+theme(axis.line = element_line(colour = "black"),
axis.text = element_text(size=6),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()
)
dev.off()

#ggplot(dat, aes(dat[,1], dat[,2], color=Legend))+
#  geom_point(size=6)+
#  $R_sign geom_text(aes(x=dat[,1], y=dat[,2], label=Number, hjust=-0.65), size=2.5)+
#  labs(x='Component 1', y='Component 2')+
#   labs(x = paste("PCA1 (", percent[1], "%)", sep = ""), y = paste("PCA2 (", percent[2], "%)", sep = "")) +
#  theme(panel.background = element_rect(fill='transparent'),panel.grid=element_line(color='grey'),panel.border=element_rect(fill='transparent',color='black'),axis.title=element_text(size=15) )
#dev.off()

pdf("$Outdir/PCA.Com3-Com4.pdf", 4,2.9)
ggplot()+
geom_point(data=dat, aes(x=Comp.3, y=Comp.4,color = factor(group)),size=2)+
geom_text_repel(data=dat, aes(x=Comp.3, y=Comp.4, label=rownames(dat),color = factor(group)),size=2)+
scale_colour_brewer(palette = "Set1",name = "Group")+
labs(x=paste("Comp 3  (",as.matrix(percent)[3],"%)"),y=paste("Comp 4  (",as.matrix(percent)[4],"%)"))+
theme_bw()+theme(axis.line = element_line(colour = "black"),
axis.text = element_text(size=6),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()
)
dev.off()

#ggplot(dat, aes(dat[,3], dat[,4], color=Legend))+
#  geom_point(size=6)+
#  $R_sign geom_text(aes(x=dat[,3], y=dat[,4], label=Number, hjust=-0.65), size=2.5)+    
#  labs(x='Component 3', y='Component 4')+
#   labs(x = paste("PCA3 (", percent[3], "%)", sep = ""), y = paste("PCA4 (", percent[4], "%)", sep = "")) +
#  theme(panel.background = element_rect(fill='transparent'),panel.grid=element_line(color='grey'),panel.border=element_rect(fill='transparent',color='black'),axis.title=element_text(size=15) )
#dev.off()

####### DATE: 2015-5-28 #######

EOF
close RSC;
print STDERR "Rscript generated successfully!\nThen wait a moment please!\n";
die "Error in Rscript execution!\n Please check your R's PATH!\n" if system("export R_LIBS=$Bin/3.2 && $Rscript $Outdir/$keyname.R >$Outdir/$keyname.Rout");
#system("rm -rf  $Outdir/$keyname.R $Outdir/$keyname.Rout");
#system("convert -density 100  $Outdir/PCA.exp.xls.3D.pdf $Outdir/PCA.exp.xls.3D.png");
#system("convert -density 100  $Outdir/PCA.exp.xls.pca_figure.pdf $Outdir/PCA.exp.xls.pca_figure.png");
#system("convert -density 100  $Outdir/PCA.exp.xls.scatter.pdf  $Outdir/PCA.exp.xls.scatter.png");
system("$Bin/../software/convert -density 600 -resize 30% $Outdir/PCA.Com1-Com2.pdf $Outdir/PCA.Com1-Com2.png");
system("$Bin/../software/convert -density 600 -resize 30% $Outdir/PCA.Com3-Com4.pdf $Outdir/PCA.Com3-Com4.png");
print STDERR "Finished!\nPlease enjoy the beautiful graphics using a viewer!\nYou can modify the R script and re-run it to get more suitable figure(s)~~\n";
